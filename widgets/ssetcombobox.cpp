#include "ssetcombobox.h"

daughterLineEdit::daughterLineEdit(QWidget *parent)
    : QLineEdit(parent)
{
    fm = new QFontMetrics(this->font());
    frameWidth = style()->pixelMetric(QStyle::PM_DefaultFrameWidth)*2;

    connect(this, SIGNAL(editingFinished()), this, SLOT(home()));
    this->installEventFilter(this);
    setFocusPolicy(Qt::ClickFocus); // rev 38: Qt::NoFocus –∏ Qt::ClickFocus –¥–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ  –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ Tab: –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –∫–æ–Ω—Ü–µ –æ—á–µ—Ä–µ–¥–∏
                                    // Qt::TabFocus –Ω–∏—á–µ–º –ø–æ –ø–æ–≤–µ–¥–µ–Ω–∏—é –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

void daughterLineEdit::enableDeleteButton(bool newState)
{
    deleteButtonEnabled = newState;
    if (deleteButtonEnabled)
    {
        deleteButton = new QToolButton(this);
        deleteButton->resize(buttonSize); // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–¥–∞—Ç—å —Ä–∞–∑–º–µ—Ä, –∏–Ω–∞—á–µ —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ –±—É–¥–µ—Ç –Ω–∞ 3 (?) –ø–∏–∫—Å–µ–ª—è –±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        deleteButton->setCursor(Qt::ArrowCursor);
        deleteButton->setStyleSheet("QToolButton { border: 0px; padding: 0px; }"); // –∑–¥–µ—Å—å —ç—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–∞–º–µ—â–∞–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Å—Ç–∏–ª—è, –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ
        deleteButton->setStyleSheet("::hover { border: 0px; background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #f6f7fa, stop: 1 #dadbde);}"); // –∞ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
        QObject::connect( deleteButton, SIGNAL(clicked()), this, SLOT(deleteButtonClicked()) );

//        deleteButton->setIconSize(QSize(buttonSize.width() - frameWidth*2, buttonSize.height() - frameWidth*2));  // –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
//        deleteButton->setText("üóô");     // —ç–∫–æ–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç
        // ‚úñ –∏–ª–∏ üóô –∏–ª–∏ ‚å´
        deleteButton->setIcon(QIcon(":/icons/light/1F5D9_32.png"));

//        QPixmap pixmap("pencil.png");
//        deleteButton->setIcon(QIcon(pixmap));   // –Ω–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∏–∫–æ–Ω–∫–æ–π .png —Ä–∞–∑–º–µ—Ä–æ–º 35–∫–ë, –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–π —Å –¥–∏—Å–∫–∞, –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤—ã—Ä–æ—Å–ª–æ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 7% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π Qt
                                                  // –ø—Ä–∏ —á–µ–º —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏, –ø–æ—Ö–æ–∂–µ, –Ω–µ –≤–ª–∏—è–µ—Ç (—Å —Ñ–∞–π–ª–æ–º .ico —Ä–∞–∑–º–µ—Ä–æ–º 300–∫–ë –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –û–ó–£ –±—ã–ª–æ –¥–∞–∂–µ —á—É—Ç—å-—á—É—Ç—å –º–µ–Ω—å—à–µ).
    }
}

void daughterLineEdit::setMaximumHeight(int height)
{
    QMargins mrg;
    setMaximumSize(maximumWidth(), height); // –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –±–æ–ª—å—à–µ –Ω–æ–≤–æ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã, —Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç —É–º–µ–Ω—å—à–µ–Ω–æ
    mrg = this->textMargins();
    mrg.setTop((this->size().height() - fm->height()));
    this->setTextMargins(mrg);
}

void daughterLineEdit::setMaximumWidth(int w)
{
    QLineEdit::setMaximumWidth(w);
}

void daughterLineEdit::resize(const QSize &size)
{
    sz.setHeight(size.height());
    buttonSize = {size.height() - frameWidth, size.height() - frameWidth};  // –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    QLineEdit::resize( size );
}

void daughterLineEdit::resize(int w, int h)
{
    resize(QSize(w, h));
}

QSize daughterLineEdit::sizeHint()
{
    return QSize(40, QLineEdit::sizeHint().height());
}

void SSetComboBox::clearEditText()
{
//    qDebug() << "Deleting daughterlinedits...";
    for(int i=daughterLineEdits.size()-1;i>=0;i--)
    {
        daughterLineEdits[i]->deleteLater();
        this->daughterLineEdits.removeAt(i);
        rearrangeDaughterLineEdits(this->width());
    }
}

bool daughterLineEdit::eventFilter(QObject *watched, QEvent *event)
{
//    if ( event->type() != QEvent::Paint && event->type() != QEvent::Paint && event->type() != QEvent::HoverMove &&
//         event->type() != QEvent::HoverEnter && event->type() != QEvent::HoverLeave && event->type() != QEvent::MouseMove &&
//         event->type() != QEvent::MetaCall && event->type() != QEvent::WindowDeactivate &&
//         event->type() != QEvent::WindowActivate && event->type() != QEvent::InputMethodQuery )
//        qDebug() << this->parent()->parent()->objectName() << ": daughterLineEdit::eventFilter(): " << event << "; object@" << this;

    return false;
}

void daughterLineEdit::resizeEvent(QResizeEvent *)
{
//    qDebug() << "daughterLineEdit::resizeEvent";

    if (deleteButtonEnabled)
        this->deleteButton->move( rect().right() - buttonSize.width(),
                                (rect().height() - buttonSize.height())/2 );
}

void daughterLineEdit::deleteButtonClicked()
{
    emit this->buttonClicked(this);
}

void daughterLineEdit::resizeToText()
{
//    qDebug() << "daughterLineEdit::resizeToText: maximumWidth()=" << maximumWidth();
    // —Ä–∞–∑–º–µ—Ä LineEdit —ç—Ç–æ: —à–∏—Ä–∏–Ω–∞_—Ç–µ–∫—Å—Ç–∞ + —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π_–∑–∞–∑–æ—Ä + —à–∏—Ä–∏–Ω–∞_–∫–Ω–æ–ø–∫–∏ + —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π_–∑–∞–∑–æ—Ä
    int pixelsWide = fm->size(Qt::TextSingleLine, this->text()).width() + frameWidth*2 + (deleteButtonEnabled?(buttonSize.width() + frameWidth):0);
    if (pixelsWide <= maximumWidth())
    {   // –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã
        setMinimumSize(pixelsWide, buttonSize.height() + frameWidth); // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä lineEdit –∏–∑–º–µ–Ω—è–µ–º –≤ —Å–æ–æ—Ç–≤. —Å —Ä–∞–∑–º–µ—Ä–æ–º –∫–Ω–æ–ø–∫–∏ (-–æ–∫) –ø–ª—é—Å –∑–∞–∑–æ—Ä—ã
        sz.setWidth(pixelsWide);    // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    }
    else
    {    // –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–µ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —à–∏—Ä–∏–Ω—ã
        setMinimumSize(maximumWidth(), buttonSize.height() + frameWidth); // –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä lineEdit –∏–∑–º–µ–Ω—è–µ–º –≤ —Å–æ–æ—Ç–≤. —Å —Ä–∞–∑–º–µ—Ä–æ–º –∫–Ω–æ–ø–∫–∏ (-–æ–∫) –ø–ª—é—Å –∑–∞–∑–æ—Ä—ã
        sz.setWidth(maximumWidth());    // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Ä–∞–≤–Ω—É—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π
    }

    this->resize(sz);
    updateTextMargins();    // –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞

//    emit textChanged();
}

void daughterLineEdit::home() // –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –Ω–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞
{
//    qDebug() << "daughterLineEdit::home()";
    QLineEdit::home(false);
}

void daughterLineEdit::updateTextMargins()    // –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–∞–∑–º–µ—Ä–æ–º lineEdit –∏ –∫–æ–ª-–≤–æ–º –∫–Ω–æ–ø–æ–∫
{
    setTextMargins(0, deleteButtonEnabled?((buttonSize.width() - fm->height())/2):0, (deleteButtonEnabled?this->height():0), deleteButtonEnabled?((buttonSize.width() - fm->height())/2):0); // –ª—É—á—à–µ –∑–∞–¥–∞–≤–∞—Ç—å –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ —Ç–∞–∫, –∞ –Ω–µ —Å –ø–æ–º. setStyleSheet, —Ç. –∫. –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
}

daughterLineEdit::~daughterLineEdit()
{
    delete fm;
    if (deleteButtonEnabled)
    {
//        delete buttonIcon;
        delete deleteButton;
    }
    // TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ª–∏ –≤ –ø–∞–º—è—Ç–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ–Ω—É–∂–Ω–æ–≥–æ
}

CBLineEdit::CBLineEdit(QWidget *parent)
    : QLineEdit(parent)
{
    installEventFilter(this);
}

CBLineEdit::~CBLineEdit()
{

}

void CBLineEdit::mousePressEvent(QMouseEvent *event)
{
//    qDebug() << this->objectName() << ": lineEditMousePressEvent(QMouseEvent *event))";
    emit mouseButtonPress();
}

void CBLineEdit::mouseReleaseEvent(QMouseEvent *event)
{
//    qDebug() << this->objectName() << ": lineEditMouseReleaseEvent(QMouseEvent *event))";
    /* –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º */
}

void CBLineEdit::resizeEvent(QResizeEvent *event)
{
//    qDebug() << this->parent()->objectName() << ": lineEditResizeEvent(QResizeEvent *event): event: " << event;
}

bool CBLineEdit::eventFilter(QObject *obj, QEvent *event)
{
//    if ( event->type() != QEvent::Paint && event->type() != QEvent::Paint && event->type() != QEvent::HoverMove &&
//         event->type() != QEvent::HoverEnter && event->type() != QEvent::HoverLeave && event->type() != QEvent::MouseMove &&
//         event->type() != QEvent::MetaCall && event->type() != QEvent::WindowDeactivate &&
//         event->type() != QEvent::WindowActivate )
//        qDebug() << this->parent()->objectName() << ": lineEditEventFilter: " << event;

    return false;
}

viewEventFilter::viewEventFilter(QObject *parent) :
    QObject(parent)
{
}

bool viewEventFilter::eventFilter(QObject *watched, QEvent *event)
{
//    qDebug() << watched->objectName() << ": viewEventFilter: " << event;

    SSetComboBox *cparent = static_cast<SSetComboBox*>(parent());   // —è —Ç–æ—á–Ω–æ –∑–Ω–∞—é, —á—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å ‚Äî —ç—Ç–æ SSetComboBox

//    if (event->type() == QEvent::Show)
//    {
//        qDebug() << watched->objectName() << ": viewEventFilter: Show: current index = " << cparent->currentIndex();
//    }

    if (event->type() == QEvent::ShortcutOverride)
    {
        QKeyEvent* shortcutEvent = static_cast<QKeyEvent*>(event);

        // –ø—Ä—è—á–µ–º —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ (–ò–õ–ò):
        //      Tab/Shift+Tab
        //      Enter/Return –ø—Ä–∏ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
        if( (shortcutEvent->key() == Qt::Key_Tab && shortcutEvent->modifiers() == Qt::Key_Shift) ||
            (shortcutEvent->key() == Qt::Key_Tab && shortcutEvent->modifiers() == Qt::NoModifier) ||
            ( ((shortcutEvent->key() == Qt::Key_Enter) || (shortcutEvent->key() == Qt::Key_Return)) && cparent->lineEdit()->text() == "" ) )
        {
//            qDebug() << watched->objectName() << ": viewEventFilter: Enter/Return on empty lineEdit pressed";
            cparent->hidePopup();
            cparent->isPopupShown = 0;
        }
//        qDebug() << watched->objectName() << ": viewEventFilter: ShortcutOverride: current index = " << cparent->currentIndex();
    }

    // —á—Ç–æ–±—ã –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞ –≤ LineEdit –Ω–µ –ø—Ä—è—Ç–∞–ª—Å—è popup
    if (event->type() == QEvent::KeyPress)
    {
        QKeyEvent* keyEvent = static_cast<QKeyEvent*>(event);

        // —Ä–µ—Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ–º –≤ lineEdit –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à (–ò–õ–ò):
        //      Enter/Return –ø—Ä–∏ –ù–ï –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
        //      –≤—Å–µ—Ö –∫—Ä–æ–º–µ Enter/Return/Down/Up
        if( ( ((keyEvent->key() == Qt::Key_Enter) || (keyEvent->key() == Qt::Key_Return)) && cparent->lineEdit()->text() != "" ) ||
            ( (keyEvent->key() != Qt::Key_Down) && (keyEvent->key() != Qt::Key_Up) &&
              (keyEvent->key() != Qt::Key_Enter) && (keyEvent->key() != Qt::Key_Return)) )
        {   // Enter/Return –Ω–µ —Ä–µ—Ç—Ä–∞–Ω—Å–ª–∏—Ä—É–µ–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π LineEdit
            QKeyEvent* newEvent = new QKeyEvent(keyEvent->type(), keyEvent->key(), keyEvent->modifiers(),
                                            keyEvent->text(), keyEvent->isAutoRepeat(), keyEvent->count());
            QFocusEvent* focusEvent = new QFocusEvent(QEvent::FocusIn, Qt::OtherFocusReason);
            QCoreApplication::postEvent(cparent->lineEdit(), focusEvent);
            QCoreApplication::postEvent(cparent->lineEdit(), newEvent);
        }

        if( (keyEvent->key() == Qt::Key_Backspace || keyEvent->key() == Qt::Key_Escape) && cparent->daughterLineEdits.size() ) // –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç backspace –∏–ª–∏ Esc
        {
            cparent->deleteDaughterLineEditOnKeyPress(keyEvent->key());
        }
    }

//    qDebug() << watched->objectName() << ": viewEventFilter (return): " << event;
    return false;
}

SSetComboBox::SSetComboBox(QWidget *parent) :
    QComboBox(parent),
    proxyModel(new QSortFilterProxyModel(this))    // –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ –º–æ–¥–µ–ª—å –ø—É—Å—Ç–æ–π –º–æ–¥–µ–ª—å—é
{
//    qDebug() << this->objectName() << ": Object constructor";

    setEditable(true);
    setInsertPolicy(QComboBox::NoInsert);    // –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫.
    setRowHeight(16);
    fontMetrics = new QFontMetrics(this->font());
    daughterLineEditHeight = fontMetrics->height();     // –≤—ã—Å–æ—Ç–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö lineEdit –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –ø–æ —Ä–∞–∑–º–µ—Ä—É —à—Ä–∏—Ñ—Ç–∞
    defaultComboBoxHeight = this->height();      // = 22; —ç—Ç–æ—Ç —Ä–∞–∑–º–µ—Ä –±–∞–∑–æ–≤—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–æ—á–µ—Ä–Ω–∏—Ö LineEdit

    viewEventFilterObj = new viewEventFilter(this);
    view()->installEventFilter(viewEventFilterObj);

    installEventFilter(this);

    isPopupShown = 0;

    connect( this, SIGNAL(activated(int)), this, SLOT(activatedHandler(int)) );
    connect( lineEdit(), SIGNAL(textEdited(const QString&)), this, SLOT(updateProxyModelFilter(const QString&)) );
    connect( lineEdit(), SIGNAL(editingFinished()), this, SLOT(parentLineEditEditingFinished()) );
    connect( lineEdit(), SIGNAL(mouseButtonPress()), this, SLOT(parentLineEditFocused()) );

    field_separator = "; "; // —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

SSetComboBox::~SSetComboBox()
{
    clearEditText();
    delete lineEdit();
    delete proxyModel;
    delete fontMetrics;
    delete viewEventFilterObj;

#ifdef CUSTOM_COMPLETER     // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π compliter
    delete p_completer;
#endif

    // TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ª–∏ –≤ –ø–∞–º—è—Ç–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ–Ω—É–∂–Ω–æ–≥–æ
}

// Event filter forwards view key events to the line edit.
bool SSetComboBox::eventFilter(QObject *watched, QEvent *event)
{
//    if ( event->type() != QEvent::Paint && event->type() != QEvent::Paint && event->type() != QEvent::HoverMove &&
//         event->type() != QEvent::HoverEnter && event->type() != QEvent::HoverLeave && event->type() != QEvent::MouseMove &&
//         event->type() != QEvent::MetaCall && event->type() != QEvent::WindowDeactivate &&
//         event->type() != QEvent::WindowActivate && event->type() != QEvent::InputMethodQuery )
//        qDebug() << this->objectName() << ": coboBoxEventFilter: (" << event << ")";
    if ( event->type() == QEvent::FocusIn )
    {
        QFocusEvent *fi = static_cast<QFocusEvent*>(event);
        if (fi->reason() == Qt::TabFocusReason || fi->reason() == Qt::BacktabFocusReason )    // –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ Tab, Shift+Tab, –ø–æ –∫–ª–∏–∫—É –º—ã—à–∫–æ–π –±—É–¥–µ—Ç –¥—Ä—É–≥–æ–µ —Å–æ–±—ã—Ç–∏–µ
        {
//            qDebug() << objectName() << ": focusIn (event:" << event << ")";
            parentLineEditFocused();
        }
    }

    return false;
}

void SSetComboBox::setModel(QAbstractItemModel *model)
{
//    qDebug() << this->objectName() << ": SSetComboBox::setModel";

    proxyModel->setSourceModel(model);
    QComboBox::setModel(proxyModel);

    p_completer = completer();
#ifdef CUSTOM_COMPLETER     // –µ—Å–ª–∏ —è –≤–¥—Ä—É–≥ –∑–∞—Ö–æ—á—É –∑–∞–º–µ–Ω–∏—Ç—å completer, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–æ–¥–µ–ª–∏
    p_completer->deleteLater();           // —Ç–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π
    p_completer = new QCompleter(model);  // —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π
    setCompleter(p_completer);            // —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ comboBox'—É
#endif
    p_completer->setCompletionMode(QCompleter::InlineCompletion);   // –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QCompleter::InlineCompletion

    setCurrentIndex(-1);

#ifdef QT_DEBUG
    view()->setObjectName(this->objectName()+"->view()");
#endif
}

void SSetComboBox::setEditable(bool editable)
{
    QComboBox::setEditable(editable);   // —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ –∫–ª–∞—Å—Å–∞
    if (editable) {
        CBLineEdit *le = new CBLineEdit(this);  // —Å–æ–∑–¥–∞—ë–º —Å–≤–æ–π LineEdit
        lineEdit()->deleteLater();              // —É–¥–∞–ª—è–µ–º LineEdit, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–µ–π –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ –∫–ª–∞—Å—Å–∞ (TODO: —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω —É–¥–∞–ª—è–µ—Ç—Å—è)
        setLineEdit(le);                        // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–æ–π LineEdit
    }
}

int SSetComboBox::hasHeightForWidth()
{
    return 1;   // —É SSetComboBox –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ü–∏—è hieght-for-width
}

/* –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤; –ø–æ—Ä—è–¥–æ–∫ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è; —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–≤–∏–≥–∞—é—Ç—Å—è –ª–µ–≤–µ–µ/–≤—ã—à–µ,
 * –µ—Å–ª–∏ –ø–æ—è–≤–∏–ª–æ—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±—ã–ª —É–¥–∞–ª—ë–Ω —ç–ª–µ–º–µ–Ω—Ç –ª–µ–≤–µ–µ/–≤—ã—à–µ), –∏–ª–∏ –ø—Ä–∞–≤–µ–µ/–Ω–∏–∂–µ,
 * –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ª–µ–≤–µ–µ/–≤—ã—à–µ –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω (—É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –∫–æ–ª-–≤–æ –∑–Ω–∞–∫–æ–≤)
 * –§—É–∫–Ω—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –≤—ã—Å–æ—Ç—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã (height-for-width)
 * –¢–∞–∫–∂–µ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç—ã –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª-—Ç–æ–≤ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º (—Å–º. —Ñ—É–Ω–∫—Ü–∏—é separator())
 * TODO: —Ä–∞–∑–º–µ—Ä ComboBox'–∞ –ø–æ –≤—ã—Å–æ—Ç–µ –Ω–∏–∫–∞–∫ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω; –Ω—É–∂–Ω–æ –ø—Ä–µ–¥—É—Å—Ç–º–æ—Ç—Ä–µ—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏ –ø–æ–ª–æ—Å–∫—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å–ª—É—á–∞–µ–≤
 * –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª-—Ç–æ–≤.
 */
int SSetComboBox::rearrangeDaughterLineEdits(int width)
{
//    qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits";
    int i;
    QMargins nextDaughterLineEditPosition = {0,0,0,0};
    int currParentLineEditHeight = minimumHeight();
    int newComboBoxHeight = defaultComboBoxHeight;

    currentDaughterLineEditPosition = {0,0,0,0};
    semicolon_separated_text = "";

    for (i=0; i < this->daughterLineEdits.size(); i++)
    {
//        qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits: this->lineEdit()->width()=" <<  this->lineEdit()->width() << "; int width = " << width;
        this->daughterLineEdits[i]->setMaximumWidth(this->lineEdit()->width());    // —Ä–∞–∑–º–µ—Ä –¥–æ—á–µ—Ä–Ω–µ–≥–æ LineEdit –Ω–µ –¥–æ–ª–æ–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ
        this->daughterLineEdits[i]->resizeToText();
//        qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits: daughterLineEdits[i]->minimumWidth()=" <<  daughterLineEdits[i]->minimumWidth();
        nextDaughterLineEditPosition.setLeft((currentDaughterLineEditPosition.left() + this->daughterLineEdits[i]->width() + daughterLineEditFrameSize));
        if ( nextDaughterLineEditPosition.left() > (width - iconSize().width()) ) // iconSize().width() - —ç—Ç–æ —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏ "v" ComboBox'–∞
        {   // –µ—Å–ª–∏ —Å—É–º–º–∞ —à–∏—Ä–∏–Ω —Ä–∞–Ω–µ–µ —Ä–∞–∑–º–µ—â—ë–Ω–Ω—ã—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö LineEdit –∏ —Ç–µ–∫—É—â–µ–≥–æ –±–æ–ª—å—à–µ —à–∏—Ä–∏–Ω—ã ComboBox, —Ç–æ —Ç–µ–∫—É—â–∏–π LineEdit —Ä–∞–∑–º–µ—â–∞–µ–º –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ
            currentDaughterLineEditPosition.setTop(currentDaughterLineEditPosition.top() + daughterLineEditFrameHeight);
            currentDaughterLineEditPosition.setLeft(0);
            newComboBoxHeight += daughterLineEditFrameHeight;
            nextDaughterLineEditPosition.setLeft((currentDaughterLineEditPosition.left() + this->daughterLineEdits[i]->width() + daughterLineEditFrameSize));
        }
        this->daughterLineEdits[i]->move(currentDaughterLineEditPosition.left(), currentDaughterLineEditPosition.top());   // –ø–µ—Ä–µ–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
        if ( (width - iconSize().width()) - nextDaughterLineEditPosition.left() < 40 )
        {   // –µ—Å–ª–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏–µ–≥–æ —ç–ª-—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω–µ–µ 40px, —Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∞ –∫—É—Ä—Å–æ—Ä —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞ —Å–ª–µ–¥. —Å—Ç—Ä–æ–∫—É
            currentDaughterLineEditPosition.setTop(currentDaughterLineEditPosition.top() + daughterLineEditFrameHeight);
            currentDaughterLineEditPosition.setLeft(0);
            newComboBoxHeight += daughterLineEditFrameHeight;
        }
        else
        {
            currentDaughterLineEditPosition.setLeft( nextDaughterLineEditPosition.left() );   // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        }

        if (semicolon_separated_text != "") // –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–∂–µ –Ω–µ –ø—É—Å—Ç–∞
            semicolon_separated_text.append(field_separator);   // –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        semicolon_separated_text.append(this->daughterLineEdits[i]->text());    // –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª-—Ç
    }
    if (this->daughterLineEdits.size() == 0)
    {   // –µ—Å–ª–∏ –±—ã–ª —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—á–µ—Ä–Ω–∏–π —ç–ª-—Ç, –¥–ª–∏–Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –ø–æ–∑–≤–æ–ª—è–ª–∞ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –∑–∞ –Ω–∏–º, —Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω—É–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —á—Ç–æ–±—ã comboBox "—Å–∫—É–∫–æ—Ä–∂–∏–ª—Å—è" –¥–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
//        qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits: daughterLineEdits.size() == 0";
        currentDaughterLineEditPosition.setTop(0);
        currentDaughterLineEditPosition.setLeft(0);
    }

    currentDaughterLineEditPosition.setTop(currentDaughterLineEditPosition.top() - 1);  // –Ω—É–∂–Ω–æ —á—É—Ç—å-—á—É—Ç—å "–ø—Ä–∏–ø–æ–¥–Ω—è—Ç—å" —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤ —É—Ä–æ–≤–µ–Ω—å —Å –¥–æ—á–µ—Ä–Ω–∏–º–∏ LineEdit
//    qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits: currParentLineEditHeight = " << currParentLineEditHeight << "; newComboBoxHeight = " << newComboBoxHeight;
    if (currParentLineEditHeight != newComboBoxHeight)
    {   // –µ—Å–ª–∏ –≤—ã—Å–æ—Ç–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, —Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç resizeEvent, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –æ—Ç—Å—Ç—É–ø—ã —Ä–æ–¥–∏—Ç. lineEdit
        setMinimumHeight(newComboBoxHeight);
    }
    // –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –æ—Ç—Å—Ç—É–ø—ã —Ä–æ–¥–∏—Ç. lineEdit
    updateLineEditGeometry();

    emit textChanged(semicolon_separated_text);   // –ø–æ—Å—ã–ª–∞–µ–º —Å–∏–≥–Ω–∞–ª (–Ω–µ –∑–Ω–∞—é –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ª–∏, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç)
//    qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits: lineEdit()->geometry()=" << lineEdit()->geometry() << "; lineEdit()->textMargins() = " << currentDaughterLineEditPosition;
//    qDebug() << this->objectName() << ": SSetComboBox::rearrangeDaughterLineEdits (return)";
    return newComboBoxHeight;   // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –≤—ã—Å–æ—Ç—ã
}

/* –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—á–µ—Ä–Ω–µ–≥–æ —ç–ª-—Ç–∞ –¥–≤–æ–π–Ω—ã–º –Ω–∞–∂–∞—Ç–∏–µ–º –∫–ª–∞–≤–∏—à–∏ backspace
 * –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª —Ä–∞–Ω–µ–µ –≤—ã–¥–µ–ª–µ–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª Esc, —Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç–º–µ–Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è
 * TODO: –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫, –≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø—Ä–æ—Ç–∏–≤–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —ç—Ç–æ–º—É.
 */
void SSetComboBox::deleteDaughterLineEditOnKeyPress(int key)
{
    if(key == Qt::Key_Backspace && lineEdit()->text() == "" )
    {
//        qDebug() << this->objectName() << ": styleSheet" << daughterLineEdits.last()->styleSheet();
        if (daughterLineEdits.last()->styleSheet().contains("background-color: #3399FF"))     // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ —Å —Å–∏–Ω–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –≤—Ç–æ—Ä–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
        {
            deleteDaughterLineEdit(daughterLineEdits.last());
        }
        else    // –∏–Ω–∞—á–µ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
            daughterLineEdits.last()->setStyleSheet("QLineEdit { background-color: #3399FF; border: none }\
                                                     QToolButton { background-color: #3399FF; border: none }");     // –ø–µ—Ä–≤–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –≤—ã–¥–µ–ª—è–µ—Ç —Å–∏–Ω–∏–º
    }
    if(key == Qt::Key_Escape )
    {
        if (daughterLineEdits.last()->styleSheet().contains("background-color: #3399FF"))     // –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ —Å —Å–∏–Ω–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º
            daughterLineEdits.last()->setStyleSheet("QLineEdit { background-color: #E5E5E5; border: none }\
                                                     QToolButton { background-color: #E5E5E5; border: none }");     // –æ—Ç–º–µ–Ω—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
    }
}

QString SSetComboBox::version()
{
    return QString("%1.%2.%3.%4").arg(MAJOR).arg(MINOR).arg(PATCH).arg(COMMIT);
}

void SSetComboBox::comboBoxSetFocus()
{
    this->lineEdit()->setFocus();
//    this->showPopup();
}

void SSetComboBox::addItem(const QString &text)
{
//    qDebug() << this->objectName() << ": SSetComboBox::addItem: text =" << text;
//    qDebug() << this->objectName() << ": daughterLineEditHeight = " << daughterLineEditHeight;

    if (text == "")
    {
//        qDebug() << this->objectName() << ": selected empty row";
        return;
    }

    dLineEdit = new daughterLineEdit(this->lineEdit());
    dLineEdit->setStyleSheet("QLineEdit { background-color: #E5E5E5; border: none }\
                                     QToolButton { background-color: #E5E5E5; border: none }");     // —Å–µ—Ä—ã–π

    dLineEdit->resize(sizeHint().width(), daughterLineEditHeight);  // resize, –ø–æ—Ö–æ–∂–µ, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–∑–º–µ—Ä —Å —É—á—ë—Ç–æ–º –æ–∫–∞–Ω—Ç–æ–≤–∫–∏, –∞ size –æ—Ç–¥–∞—ë—Ç —Ä–∞–∑–º–µ—Ä –±–µ–∑ –æ–∫–∞–Ω—Ç–æ–≤–∫–∏

    dLineEdit->enableDeleteButton();
    // —Ä–∞–∑–º–µ—Ä –¥–æ—á–µ—Ä–Ω–µ–≥–æ LineEdit (–≤ –Ω—ë–º –∂–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –æ—Ç—Å—Ç—É–ø —Ç–µ–∫—Å—Ç–∞ –æ—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫—Ä–∞—è)
    dLineEdit->setMaximumHeight(daughterLineEditHeight);    // default contentsRect(): QRect(0,0 40x16), default lineEdit size: 40x16
    dLineEdit->setMaximumWidth(this->lineEdit()->width());    // —Ä–∞–∑–º–µ—Ä –¥–æ—á–µ—Ä–Ω–µ–≥–æ LineEdit –Ω–µ –¥–æ–ª–æ–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ
    // –ø–æ—Ç–æ–º —Ç–µ–∫—Å—Ç
    dLineEdit->setText(text);
    // TODO: –ø–æ –∫—Ä–∞—Å–æ—Ç–µ, –∫–æ–Ω–µ—á–Ω–æ, –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –≤—Å–µ —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏—Å—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –¥–æ—á–µ—Ä–Ω–µ–≥–æ lineEdit, –Ω–æ –ø–æ–∫–∞ —è –Ω–µ —É–º–µ—é :-(

    connect(dLineEdit, SIGNAL(buttonClicked(daughterLineEdit*)), this, SLOT(deleteDaughterLineEdit(daughterLineEdit*)));
    connect(dLineEdit, SIGNAL(textChanged(const QString&)), this, SLOT(daughterLineEditTextChanged()));
    connect(dLineEdit, SIGNAL(editingFinished()), this, SLOT(comboBoxSetFocus()));
    this->daughterLineEdits.append(dLineEdit);

    dLineEdit->show();
    emit daughterLineEditAdded();
    dLineEdit->home();
    // TODO: –≤ –ê–°–¶ —Å–¥–µ–ª–∞–Ω–æ —Ç–∞–∫, —á—Ç–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ—á–µ—Ä–Ω–µ–≥–æ LineEdit –≤–Ω–æ–≤—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    // –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–æ—á–µ—Ä–Ω–µ–≥–æ LineEdit, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–∂–¥–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞, –Ω–æ –µ–≥–æ —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è, –æ–Ω —Ç–æ–∂–µ –≤–Ω–æ–≤—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    // —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–æ–∂–µ —á–µ—Ä–µ–∑ QSortFilterProxyModel, –Ω–æ –ø–æ—Ç–æ–º...

    rearrangeDaughterLineEdits(this->width());

    proxyModel->setFilterFixedString(""); // –æ—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É —Ñ–∏–ª—å—Ç—Ä–∞
    this->lineEdit()->clear(); // –µ—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–æ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –æ—á–∏—Å—Ç–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç
    isPopupShown = 0;   // –æ—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞

    // —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–µ—Ü. –ø–æ–ª–µ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
    // –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç "–∞–¥–∞–ø—Ç–µ—Ä –ø–∏—Ç–∞–Ω–∏—è <–º–æ–¥–µ–ª—å>",
    // —Ç–æ —Ç–µ–∫—Å—Ç –≤ —Ç—Ä–µ—É–≥–æ–ª–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª–µ–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ç–µ–ª–æ–¥–≤–∏–∂–µ–Ω–∏–π
    // –∑–∞–ø–∏—Å–∞—Ç—å –º–æ–¥–µ–ª—å –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–∞—Ç—å Enter –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç–∏
    // –≤—ã–¥–µ–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –æ–¥–Ω–∏–º —Å–ø–µ—Ü. –ø–æ–ª–µ–º (—Ç. –µ. –≤—ã–¥–µ–ª–∏—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ, –µ—Å–ª–∏ –∏—Ö –≤–¥—Ä—É–≥ –±—É–¥–µ—Ç –¥–≤–∞ –∏–ª–∏ –±–æ–ª—å—à–µ)
    if (text.size() >= 2)   // –Ω–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω–æ, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç
    {
        if (text.contains(QRegularExpression("\\<.*\\>")))
        {
            int start = text.indexOf('<');
            int end = text.indexOf('>');

            dLineEdit->setFocus();
            dLineEdit->setSelection(start, end - start + 1);
            isPopupShown = 1;
//            qDebug() << this->objectName() << ": SSetComboBox::addItem: selected sub-field in <>";
        }
    }

//    qDebug() << this->objectName() << ": SSetComboBox::addItem (return)";
}

void SSetComboBox::activatedHandler(int index)
{
//    qDebug() << this->objectName() << ": SSetComboBox::activatedHandler: index =" << index;
    // –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–∫–∞–∑–∞—Ç–µ–ª–µ–º —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫ –ø—Ä—è—á–µ—Ç—Å—è, –∞ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–ª –æ—Ç–æ—Ä–∞–∂–∞—Ç—å—Å—è
    // —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ —ç—Ç–æ–º, –ø—Ä–∞–≤–¥–∞, —É—Å–ø–µ–≤–∞–µ—Ç "–º–∏–≥–Ω—É—Ç—å", –Ω–æ —ç—Ç–æ –º–µ–ª–æ—á–∏, –ø–æ—Ç–æ–º —Ä–∞–∑–±–µ—Ä—É—Å—å.
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ: —Å–ø–∏—Å–æ–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–Ω–æ–≤—å –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è, –µ—Å–ª–∏ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞;
    // —ç—Ç–æ —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter –≤ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–∞–±–æ—Ç–∞–ª–æ —Å–∫—Ä—ã—Ç–∏–µ/–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
    if (this->itemText(index) != "")
    {
        isPopupShown = 0;   // –≤–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫! —Å–Ω–∞—á–∞–ª–∞ –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–ª–∞–≥–∞
        addItem(this->itemText(index));
        parentLineEditFocused(); // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏-—Å–ª–æ—Ç–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    }
    emit activatedDerived(index);
}

/*
 * TODO: –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç
 * –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—á–µ—Ä–Ω–∏–π —ç–ª-—Ç —Å —Ç–µ–∫—Å—Ç–æ–º, —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º –∏–∑ —Å–ø–∏—Å–∫–∞, –¥–æ–±–∞–≤–∏–ª—Å—è —Ç–æ–ª—å–∫–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç,
 * –∞ –Ω–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –∏–ª–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–Ω—ã–π. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å Esc/Backspace.
 */
void SSetComboBox::updateProxyModelFilter(const QString &text)
{
//    qDebug() << this->objectName() << ": SSetComboBox::updateProxyModelFilter";

    proxyModel->setFilterFixedString(text); // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–æ–¥–µ–ª—å, –∏ –∑–∞–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç
                                            // LineEdit –Ω–∞ —Ç–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–º –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ

    lineEdit()->setText(text);              // –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—Ç–Ω–æ :-) –¥–∏—á—å, –∞ —à–æ –¥–µ–ª–∞—Ç—å... –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –∫–∞–∫ (TODO) —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —ç–ª–µ–≥–∞–Ω—Ç–Ω–µ–µ
}

void SSetComboBox::daughterLineEditTextChanged()
{
//    qDebug() << this->objectName() << ": SSetComboBox::daughterLineEditTextChanged()";
    rearrangeDaughterLineEdits(this->width());
}

void SSetComboBox::deleteDaughterLineEdit(daughterLineEdit *widget)
{
//    qDebug() << this->objectName() << ": SSetComboBox::deleteDaughterLineEdit";
    int i;

    for (i=0; this->daughterLineEdits[i] != widget; i++)
    {
    }
    this->daughterLineEdits.removeAt(i);
    widget->deleteLater();
    rearrangeDaughterLineEdits(this->width());

    this->lineEdit()->setFocus();    // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å
}

void SSetComboBox::parentLineEditEditingFinished()
{
//    qDebug() << this->objectName() << ": SSetComboBox::parentLineEditEditingFinished: lineEdit()->text() =" << this->lineEdit()->text();
    if (this->lineEdit()->text().length())
        addItem(this->lineEdit()->text());
}

void SSetComboBox::parentLineEditFocused()
{
//    qDebug() << this->objectName() << ": SSetComboBox::parentLineEditFocused()" << ": isPopupShown = " << isPopupShown << ": view()->isVisible() = " << view()->isVisible() << "; lineEdit()->text() =" << this->lineEdit()->text();
//    qDebug() << this->objectName() << ": SSetComboBox::parentLineEditFocused(): lineEdit()->geometry() = " << lineEdit()->geometry() << "lineEdit()->textMargins() = " << lineEdit()->textMargins();
    if (isPopupShown == 0)
    {   // –ß—Ç–æ–±—ã –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —â–µ–ª—á–∫–µ –æ—Ç–æ—Ä–∞–∂–∞–ª—Å—è, –∞ –ø—Ä–∏ –≤—Ç–æ—Ä–æ–º —Å–∫—Ä—ã–≤–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é-—Ñ–ª–∞–≥
//        setCurrentIndex(0);     // –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å, –∏–Ω–∞—á–µ –ø—Ä–∏ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–º
                                // –Ω–∞–∂–∞—Ç–∏–∏ Enter –≤ —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–¥—Å–≤–µ—á–µ–Ω–Ω—ã–π –∫—É—Ä—Å–æ—Ä–æ–º —ç–ª–µ–º–µ–Ω—Ç.
        setCurrentIndex(-1);

        // —ç–º—É–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞ (showPopup –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è)
        QMouseEvent *e = new QMouseEvent(QEvent::MouseButtonPress, QPointF((this->frameGeometry().width() - this->iconSize().width()/2), (this->frameGeometry().height() - this->iconSize().height()/2)), Qt::LeftButton, Qt::LeftButton, Qt::NoModifier);
        QComboBox::mousePressEvent(e);
        isPopupShown = 1;
        lineEdit()->setFocus();
        delete e;
    }
    else
        isPopupShown = 0;
}

QSize SSetComboBox::sizeHint()
{
//    qDebug() << this->objectName() << ": SSetComboBox::sizeHint()";
    return QSize(150, 22);
}

QSize SSetComboBox::minimumSizeHint()
{
//    qDebug() << this->objectName() << ": SSetComboBox::minimumSizeHint()";
    return QSize(150, 22);
}

/* –≠—Ç–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è setGeometry(const QRect &geometry) */
void SSetComboBox::setGeometry(int x, int y, int w, int h)
{
//    qDebug() << this->objectName() << ": SSetComboBox::setGeometry(int x, int y, int w, int h)";
    setGeometry(QRect(x, y, w, h));
}

/* —à–∏—Ä–∏–Ω–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∞ –≤—ã—Å–æ—Ç–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –±–æ–ª—å—à–∞—è –∏–∑ –¥–≤—É—Ö:
 * –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ —Ç—Ä–µ–±—É–µ–º–æ–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 */
void SSetComboBox::setGeometry(const QRect &geometry)
{
//    qDebug() << this->objectName() << ": SSetComboBox::setGeometry(const QRect &geometry)";
    int mh = rearrangeDaughterLineEdits(geometry.width());

    // –≤—ã—Å–æ—Ç–∞ –∫–æ–º–±–æ–±–æ–∫—Å–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º —Å—É–º–º–∞ –≤—ã—Å–æ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–æ –º–µ–Ω—å—à–µ –Ω–µ –º–æ–∂–µ—Ç
    if (geometry.height() > mh)
    {
        setMinimumHeight(geometry.height());
        QComboBox::setGeometry( geometry );
    }
    else
        QComboBox::setGeometry(geometry.left(), geometry.top(), geometry.width(), mh);
}

/* –†–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ LineEdit'–∞; –ø–æ —ç—Ç–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –±—É–¥–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è —Ä–∞–∑–º–µ—Ä –¥–æ—á–µ—Ä–Ω–æ–≥–æ LineEdit'–∞
 * –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã, –∞ –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
 * TODO: —Å–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –û–°
 */
void SSetComboBox::setRowHeight(int h)
{
    parentLineEditFrameSize = lineEdit()->geometry().left();   // = 3; –¥–æ –∫–æ–Ω—Ü–∞ –Ω–µ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è, –Ω–æ —ç—Ç–æ, –≤—Ä–æ–¥–µ –±—ã, —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–≥–Ω—è –∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–∫–æ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –û–°, –ø–æ—ç—Ç–æ–º—É –ø–æ—Å—á–∏—Ç–∞–µ–º –µ—ë —Å—Ä–∞–∑—É
    daughterLineEditFrameSize = lineEdit()->style()->pixelMetric(QStyle::PM_DefaultFrameWidth) * 2; // DefaultFrameWidth lineEdit'a —Ä–∞–≤–µ–Ω 1
//    daughterLineEditHeight = h - 2 * parentLineEditFrameSize;
    daughterLineEditHeight = h;
    daughterLineEditFrameHeight = daughterLineEditHeight + daughterLineEditFrameSize;
//    qDebug() << this->objectName() << ": SSetComboBox::setRowHeight :  parentLineEditFrameSize = " << parentLineEditFrameSize << "; daughterLineEditHeight = " << daughterLineEditHeight << "; daughterLineEditFrameSize = " << daughterLineEditFrameSize;
}

void SSetComboBox::setMinimumSize(const QSize &size)
{
//    qDebug() << this->objectName() << ": SSetComboBox::setMinimumSize()";
    resize(qMax(this->size().width(),size.width()), qMax(this->size().height(),size.height()));
    QComboBox::setMinimumSize(size);
}

void SSetComboBox::setMinimumHeight(int h)
{
//    qDebug() << this->objectName() << ": SSetComboBox::setMinimumHeight(" << h << ")";
    eventTrigger |= SSetComboBox::minimumHeightUpdated;
    QComboBox::setMinimumHeight(h);
}

/*  —Ä–∞–∑–º–µ—Ä –∑–∞–¥–∞—ë—Ç—Å—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏ setGeometry()
 *
 */
void SSetComboBox::resize(const QSize &size)
{
//    qDebug() << this->objectName() << ": SSetComboBox::resize(QSize &)";
//    qDebug() << this->objectName() << ": sizePolicy() = " << sizePolicy();
//    qDebug() << this->objectName() << ": SSetComboBox::resize: size = " << size;
    int mh = rearrangeDaughterLineEdits(size.width());

    // –≤—ã—Å–æ—Ç–∞ –∫–æ–º–±–æ–±–æ–∫—Å–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º —Å—É–º–º–∞ –≤—ã—Å–æ—Ç –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–æ –º–µ–Ω—å—à–µ –Ω–µ –º–æ–∂–µ—Ç
    if (size.height() > mh)
    {
        setMinimumHeight(size.height());
        QComboBox::resize( size );
    }
    else
        QComboBox::resize(size.width(), mh);
}

void SSetComboBox::resize(int w, int h)
{
//    qDebug() << this->objectName() << ": SSetComboBox::resize(int w, int h)";

    resize(QSize(w, h));
}

void SSetComboBox::updateLineEditGeometry()
{
//    qDebug() << this->objectName() << ": SSetComboBox::updateLineEditGeometry()";

    this->lineEdit()->resize(this->geometry().width() - parentLineEditFrameSize * 2 - iconSize().width(),
                             this->geometry().height() - parentLineEditFrameSize * 2);
    //                                                                                          ^
    //                                                                          —ç—Ç–æ —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏ "v" comboBox'–∞
    currentDaughterLineEditPosition.setBottom(this->geometry().height() - currentDaughterLineEditPosition.top() - daughterLineEditFrameHeight - parentLineEditFrameSize - daughterLineEditFrameSize );
    this->lineEdit()->setTextMargins(currentDaughterLineEditPosition);
}

QString SSetComboBox::separator()
{
    return field_separator;
}

QString SSetComboBox::text()
{
    return semicolon_separated_text;
}

QString SSetComboBox::currentText()
{
    return semicolon_separated_text;
}

void SSetComboBox::setSeparator(QString s)
{
    field_separator = s;
}

void SSetComboBox::setSeparator(char c)
{
    field_separator = QString(c);
}

void SSetComboBox::setSizePolicy(QSizePolicy sp)
{
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ —Ä–∞–∑–º–µ–Ω–∞ –∫–æ–º–±–æ–±–æ–∫—Å–∞. –ï—Å–ª–∏ –±—É–¥–µ—Ç –Ω–µ —Ç–∞–∫–æ–π, —Ç–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏–µ/—Å–∂–∞—Ç–∏–µ –ø–æ –≤—ã—Å–æ—Ç–µ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –∑–∞–¥—É–º–∞–Ω–æ.
    QSizePolicy tsp(QSizePolicy::Preferred, QSizePolicy::Minimum);  // target sizePolicy
//    if (sp != tsp)
//        qDebug() << this->objectName() << "ACHTUNG! –ü–æ–ª–∏—Ç–∏–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å QSizePolicy(QSizePolicy::Preferred, QSizePolicy::Minimum)";
    QComboBox::setSizePolicy(sp);
}

void SSetComboBox::setSizePolicy(QSizePolicy::Policy horizontal, QSizePolicy::Policy vertical)
{
    setSizePolicy(QSizePolicy(horizontal, vertical));
}

void SSetComboBox::resizeEvent(QResizeEvent *event)
{
//    qDebug() << this->objectName() << ": SSetComboBox::resizeEvent: event: " << event << "; eventTrigger = " << eventTrigger;
//    qDebug() << this->objectName() << ": SSetComboBox::resizeEvent: minimumHeight() = " << minimumHeight() << "; maximumHeight()" << maximumHeight();
//    qDebug() << this->objectName() << ": SSetComboBox::resizeEvent: minimumSizeHint() = " << minimumSizeHint() << "; sizeHint()" << sizeHint();
//    qDebug() << this->objectName() << ": SSetComboBox::resizeEvent: height() = " << height();

    if ( !(eventTrigger & SSetComboBox::minimumHeightUpdated))   // –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –≤—ã–∑–≤–∞–Ω–æ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –º–∏–Ω. –≤—ã—Å–æ—Ç—ã (–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞)
    {
        setMinimumHeight( rearrangeDaughterLineEdits(this->width()) );  // –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ç—Ä–µ–±—É–µ–º—É—é –≤—ã—Å–æ—Ç—É
    }
    // –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä lineEdit'–∞
    updateLineEditGeometry();

    eventTrigger &= ~(SSetComboBox::minimumHeightUpdated);   // –≤—Å–µ–≥–¥–∞ –æ—á–∏—â–∞–µ–º —Ñ–ª–∞–≥; –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å rearrange –Ω–µ –Ω—É–∂–Ω–æ

//    qDebug() << this->objectName() << ": SSetComboBox::resizeEvent (return); eventTrigger = " << eventTrigger;
}

void SSetComboBox::mouseMoveEvent(QMouseEvent *event)
{
//    qDebug() << this->objectName() << ": SSetComboBox::mouseMoveEvent(QMouseEvent *event): event =" <<event;
}

void SSetComboBox::wheelEvent(QWheelEvent *event)
{
//    qDebug() << this->objectName() << ": SSetComboBox::wheelEvent(QWheelEvent *event): event =" <<event;
    /* –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–Ω–∏–∏ –∫–æ–ª—ë—Å–∏–∫–∞ –º—ã—à–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏—Å—å –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
}

void SSetComboBox::keyPressEvent(QKeyEvent *event)
{
//    qDebug() << this->objectName() << ": SSetComboBox::keyPressEvent(QKeyEvent *event): event =" <<event;
    // –∫–æ–≥–¥–∞ —Ñ–æ–∫—É—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ LineEdit, –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ –≤—ã–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞ (–ø—Ä–∏ —ç—Ç–æ–º —Å–ø–∏—Å–æ–∫ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
    // –∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤;
    if(event->key() == Qt::Key_Up || event->key() == Qt::Key_Down ) // –ø–æ–¥–∞–≤–ª—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ —ç—Ç–∏—Ö –∫–ª–∞–≤–∏—à
        return;

    if( (event->key() == Qt::Key_Backspace || event->key() == Qt::Key_Escape) && daughterLineEdits.size() ) // –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç backspace –∏–ª–∏ Esc
    {
        deleteDaughterLineEditOnKeyPress(event->key());
    }

    // –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, —Ç–æ –Ω–∞–∂–∞—Ç–∏–µ Enter –≤—ã–∑–æ–≤–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞. –≠—Ç–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    if ( (event->key() == Qt::Key_Enter || event->key() == Qt::Key_Return) && lineEdit()->text() == "" )
        parentLineEditFocused();
    QComboBox::keyPressEvent(event);
}

void SSetComboBox::mousePressEvent(QMouseEvent *event)
{
    // —ç—Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "v"; –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ –∫–ª–∞—Å—Å–∞
//    qDebug() << this->objectName() << ": SSetComboBox::mousePressEvent(QMouseEvent *event)";
    QComboBox::mousePressEvent(event);
}

void SSetComboBox::mouseDoubleClickEvent(QMouseEvent *event)
{
    // —ç—Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "v"; –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–µ–Ω, –ø–æ—ç—Ç–æ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
//    qDebug() << this->objectName() << ": SSetComboBox::mouseDoubleClickEvent(QMouseEvent *event)";
    // TODO: –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
}
