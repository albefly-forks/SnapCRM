#ifndef SREPAIRMODEL_H
#define SREPAIRMODEL_H

#include "scomrecord.h"
#include <QObject>
#include <QString>
#include <QDate>
#include "sdevmdlmodel.h"
#include "sclientmodel.h"
#include "ssaletablemodel.h"
#include "srepairstatuslog.h"

class SRepairModel : public SComRecord
{
    Q_OBJECT
signals:
    void modelUpdated();
public:
    explicit SRepairModel(QObject *parent = nullptr);
    explicit SRepairModel(const int, QObject *parent = nullptr);
    ~SRepairModel();
    int id();
    void setId(const int);
    void load(const int);
    void reload();
    bool isHidden();
    void setHidden(const bool);
    QString title();
    void setTitle(const QString);
    int clientId();
    void setClientId(const int);
    SClientModel *clientModel();
    int classId();
    void setClassId(const int);
    int vendorId();
    void setVendorId(const int);
    int deviceId();
    void setDeviceId(const int);
    QString serialNumber();
    void setSerialNumber(const QString);
    int companyIndex();
    void setCompanyIndex(const int);
    int office();
    int officeIndex();
    void setOffice(const int);
    void setOfficeIndex(const int);
    int startOfficeIndex();
    void setStartOffice(const int);
    void setStartOfficeIndex(const int);
    int manager();
    int managerIndex();
    void setManager(const int);
    void setManagerIndex(const int);
    int currentManager();
    int currentManagerIndex();
    void setCurrentManager(const int);
    void setCurrentManagerIndex(const int);
    int engineer();
    int engineerIndex();
    void setEngineer(const int);
    void setEngineerIndex(const int);
    QString diagnosticResult();
    void setDiagnosticResult(const QVariant);
    void setDiagnosticResult(const QString);
    QDateTime inDate();
    void setInDate(const QDateTime);
    QDateTime outDateUtc();
    QString outDate();
    void setOutDate(const QDateTime);
    int state();
    int stateIndex();
    void setState(const int);
    void setStateIndex(const int);
    int newStateIndex();
    void setNewStateIndex(const int);
    int userLock();
    void setUserLock(const int);
    QDateTime lockDatetime();
    void setLockDatetime(const QDateTime);
    bool expressRepair();
    void setExpressRepair(const bool);
    bool quickRepair();
    void setQuickRepair(const bool);
    bool isWarranty();
    void setIsWarranty(const bool);
    bool isRepeat();
    void setIsRepeat(const bool);
    int paymentSystem();
    int paymentSystemIndex();
    void setPaymentSystem(const int);
    void setPaymentSystemIndex(const int);
    bool isCardPayment();
    void setIsCardPayment(const bool);
    bool canFormat();
    void setCanFormat(const bool);
    bool printCheck();
    void setPrintCheck(const bool);
    int boxIndex();
    void setBoxIndex(const int);
    QString warrantyLabel();
    void setWarrantyLabel(const QString);
    QString extNotes();
    void setExtNotes(const QString);
    bool isPrepaid();
    void setIsPrepaid(const bool state = true);
    int prepaidType();
    void setPrepaidType(const int);
    double prepaidSumm();
    void setPrepaidSumm(const double);
    double realPrepaidSumm();
    int prepaidOrder();
    void setPrepaidOrder(const int);
    void addPrepay(double amount, QString reason = QString());
    bool isPreAgreed();
    void setIsPreAgreed(const bool);
    bool isDebt();
    void setIsDebt(const bool);
    double preAgreedAmount();
    void setPreAgreedAmount(const double);
    double repairCost();
    void setRepairCost(const double);
    double realRepairCost();
    void setRealRepairCost(const double);
    double partsCost();
    void setPartsCost(const double);
    double realWorksCost();
    double realPartsCost();
    QString fault();
    void setFault(const QString);
    QString complect();
    void setComplect(const QString);
    QString look();
    void setLook(const QString);
    bool thirsPartySc();
    void setThirsPartySc(const bool);
    QDateTime lastSave();
    void setLastSave(const QDateTime);
    void updateLastSave();
    QDateTime lastStatusChanged();
    void setLastStatusChanged(const QDateTime);
    void updateLastStatusChanged();
    int warrantyDays();
    void setWarrantyDays(const int);
    QString barcode();
    void setBarcode(const QString);
    QString rejectReason();
    void setRejectReason(const QString);
    int informedStatusIndex();
    void setInformedStatusIndex(const int);
    QString imageIds();
    void setImageIds(const QString);
    QString color();
    void setColor(const QColor);
    QString orderMoving();
    void setOrderMoving(const QString);
    int early();
    void setEarly(const int);
    QString extEarly();
    void setExtEarly(const QString);
    QString issuedMsg();
    void setIssuedMsg(const QString);
    bool smsInform();
    void setSmsInform(const bool);
    int invoice();
    void setInvoice(const int);
    int cartridge();
    void setCartridge(const int);
    bool termsControl();
    void setTermsControl(const bool);
    bool commit();
    bool lock(bool state = 1);
    bool isLock();

private:
    SClientModel *m_clientModel;
    SRepairStatusLog *m_repairStatusLog;
    bool m_isHidden = 0;
    QString m_title;
    int m_clientId = 0;
    int m_type = 0;
    int m_maker = 0;
    int m_model = 0;
    QString m_serialNumber;
    int m_company = 0;
    int m_office = 0;
    int m_startOffice = 0;
    int m_manager = 0;
    int m_currentManager = 0;
    int m_master = 0;
    QString m_diagnosticResult;
    QDateTime m_inDate;
    QDateTime m_outDate;
    int m_state = 0;
    int m_newState = 0;
    int m_userLock = 0;
    QDateTime m_lockDatetime;
    bool m_expressRepair = 0;
    bool m_quickRepair = 0;
    bool m_isWarranty = 0;
    bool m_isRepeat = 0;
    int m_paymentSystem = 0;
    bool m_isCardPayment = 0;
    bool m_canFormat = 0;
    bool m_printCheck = 0;
    int m_box = 0;
    QString m_warrantyLabel;
    QString m_extNotes;
    bool m_isPrepaid = 0;
    int m_prepaidType = 0;
    double m_prepaidSumm = 0;
    int m_prepaidOrder = 0;
    bool m_isPreAgreed = 0;
    bool m_isDebt = 0;
    double m_preAgreedAmount = 0;
    double m_repairCost = 0;
    double m_realRepairCost = 0;
    double m_partsCost = 0;
    QString m_fault;
    QString m_complect;
    QString m_look;
    bool m_thirsPartySc = 0;
    QDateTime m_lastSave;
    QDateTime m_lastStatusChanged;
    int m_warrantyDays = 0;
    QString m_barcode;
    QString m_rejectReason;
    int m_informedStatus = 0;
    QString m_imageIds;
    QString m_color;
    QString m_orderMoving;
    int m_early = 0;
    QString m_extEarly;
    QString m_issuedMsg;
    bool m_smsInform = 0;
    int m_invoice = 0;
    int m_cartridge = 0;
    int m_vendorId = 0;
    bool m_termsControl = 0;
};

#endif // SREPAIRMODEL_H
